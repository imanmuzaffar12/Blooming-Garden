



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `FrameworkConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=DESKTOP-BUP301M;Initial Catalog=BloomingGarden;Integrated Security=True;`
//     Schema:                 ``
//     Include Views:          `False`





using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace Framework.Shared.DataServices
{

	public partial class FrameworkRepository : Database
	{
		public FrameworkRepository() 
			: base("FrameworkConnection")
		{
			CommonConstruct();
		}

		public FrameworkRepository(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			FrameworkRepository GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static FrameworkRepository GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new FrameworkRepository();
        }

		[ThreadStatic] static FrameworkRepository _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static FrameworkRepository repo { get { return FrameworkRepository.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    
	[TableName("APIConfigurations")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class APIConfiguration : FrameworkRepository.Record<APIConfiguration>  
    {


		[Column] public int ID { get; set; }

		[Column] public string Title { get; set; }

		[Column] public string UrlName { get; set; }

		[Column] public string MethodType { get; set; }

		[Column] public string Description { get; set; }

		[Column] public string URL { get; set; }

		[Column] public string SqlQuery { get; set; }

		[Column] public string DefaultParams { get; set; }

		[Column] public bool? IsActive { get; set; }

		[Column] public string UrlParams { get; set; }

		[Column] public string DataParams { get; set; }

		[Column] public string SuccessResponse { get; set; }

		[Column] public string ErrorResponse { get; set; }

		[Column] public string SampleCall { get; set; }

		[Column] public string Notes { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }

		[Column] public bool? IsCacheAllowed { get; set; }}

    
	[TableName("Languages")]


	[PrimaryKey("LanguageID")]



	[ExplicitColumns]
    public partial class Language : FrameworkRepository.Record<Language>  
    {


		[Column] public int LanguageID { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public bool IsDeleted { get; set; }}

    
	[TableName("AppConfigs")]


	[PrimaryKey("AppConfigID")]



	[ExplicitColumns]
    public partial class AppConfig : FrameworkRepository.Record<AppConfig>  
    {


		[Column] public int AppConfigID { get; set; }

		[Column] public string AppConfigKey { get; set; }

		[Column] public string AppConfigValue { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public int? ModifiedBy { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }}

    
	[TableName("AppMenus")]


	[PrimaryKey("AppMenuID")]



	[ExplicitColumns]
    public partial class AppMenu : FrameworkRepository.Record<AppMenu>  
    {


		[Column] public int AppMenuID { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameTr { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public string MenuUrl { get; set; }

		[Column] public string ActiveIconUrl { get; set; }

		[Column] public string InActiveIconUrl { get; set; }

		[Column] public int DisplaySeqNo { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("V_Prod")]


	[PrimaryKey("ProductID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class V_Prod : FrameworkRepository.Record<V_Prod>  
    {


		[Column] public int ProductID { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public int Stock { get; set; }

		[Column] public int? CategoryID { get; set; }

		[Column] public int? Price { get; set; }}

    
	[TableName("Categories")]


	[PrimaryKey("CategoryID")]



	[ExplicitColumns]
    public partial class Category : FrameworkRepository.Record<Category>  
    {


		[Column] public int CategoryID { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public int? ParentCategoryID { get; set; }

		[Column] public int DisplaySeqNo { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public string ImageUrl { get; set; }

		[Column] public string ImageUrl2 { get; set; }

		[Column] public bool IsDeleted { get; set; }

		[Column] public string WebImages { get; set; }}

    
	[TableName("Cities")]


	[PrimaryKey("CityID")]



	[ExplicitColumns]
    public partial class City : FrameworkRepository.Record<City>  
    {


		[Column] public int CityID { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public bool IsDeleted { get; set; }

		[Column] public int? CountryID { get; set; }}

    
	[TableName("Contacts")]


	[PrimaryKey("ContactID")]



	[ExplicitColumns]
    public partial class Contact : FrameworkRepository.Record<Contact>  
    {


		[Column] public int ContactID { get; set; }

		[Column] public int UserID { get; set; }

		[Column] public string Name { get; set; }

		[Column] public string Email { get; set; }

		[Column] public string PhoneNo { get; set; }

		[Column] public string Message { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("ContactUs")]


	[PrimaryKey("ContactUsID")]



	[ExplicitColumns]
    public partial class ContactU : FrameworkRepository.Record<ContactU>  
    {


		[Column] public int ContactUsID { get; set; }

		[Column] public string Name { get; set; }

		[Column] public string Email { get; set; }

		[Column] public decimal? Phone { get; set; }

		[Column] public string Message { get; set; }}

    
	[TableName("Countries")]


	[PrimaryKey("CountryID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class Country : FrameworkRepository.Record<Country>  
    {


		[Column] public int CountryID { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameTr { get; set; }

		[Column] public string FlagUrl { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("Currencies")]


	[PrimaryKey("CurrencyID")]



	[ExplicitColumns]
    public partial class Currency : FrameworkRepository.Record<Currency>  
    {


		[Column] public int CurrencyID { get; set; }

		[Column] public string CurrencyCode { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameTr { get; set; }

		[Column] public bool IsActive { get; set; }}

    
	[TableName("DeviceRegistrations")]


	[PrimaryKey("DeviceRegistrationID")]



	[ExplicitColumns]
    public partial class DeviceRegistration : FrameworkRepository.Record<DeviceRegistration>  
    {


		[Column] public int DeviceRegistrationID { get; set; }

		[Column] public string Token { get; set; }

		[Column] public int UserID { get; set; }

		[Column] public int DeviceTypeID { get; set; }

		[Column] public DateTime CreatedOn { get; set; }

		[Column] public int CreatedBy { get; set; }

		[Column] public DateTime ModifiedOn { get; set; }

		[Column] public int ModifiedBy { get; set; }}

    
	[TableName("DeviceTypes")]


	[PrimaryKey("DeviceID")]



	[ExplicitColumns]
    public partial class DeviceType : FrameworkRepository.Record<DeviceType>  
    {


		[Column] public int DeviceID { get; set; }

		[Column] public string Name { get; set; }

		[Column] public bool IsActive { get; set; }}

    
	[TableName("DynamicSetupScreens")]


	[PrimaryKey("DynamicSetupScreenID")]



	[ExplicitColumns]
    public partial class DynamicSetupScreen : FrameworkRepository.Record<DynamicSetupScreen>  
    {


		[Column] public int DynamicSetupScreenID { get; set; }

		[Column] public string ModuleName { get; set; }

		[Column] public string ScreenName { get; set; }

		[Column] public string DS_TableName { get; set; }

		[Column] public string DS_Title { get; set; }

		[Column] public bool? DS_AllowAddEdit { get; set; }

		[Column] public bool? DS_AllowPreview { get; set; }

		[Column] public bool? DS_AllowSearchFilter { get; set; }

		[Column] public bool? DS_AllowListingGrid { get; set; }

		[Column] public string DS_GridColumns { get; set; }

		[Column] public bool? DS_AllowDelete { get; set; }

		[Column] public bool? DS_AllowEdit { get; set; }

		[Column] public bool? DS_AllowApprovals { get; set; }

		[Column] public string DS_ExcludeAddEditColumns { get; set; }

		[Column] public string DS_ExcludeSearchColumns { get; set; }

		[Column] public string DS_ShowAddNewButton { get; set; }

		[Column] public string DS_GridTitle { get; set; }

		[Column] public string DS_OrderBy { get; set; }

		[Column] public bool? DS_DoNotRenderJavaScript { get; set; }

		[Column] public string DS_ExtenderName { get; set; }

		[Column] public bool? DS_DontLoadRecursiveData { get; set; }

		[Column] public bool? DS_AllowImport { get; set; }

		[Column] public string DS_ParentColumnNameForRecursiveGrid { get; set; }

		[Column] public int? DS_RecordsPerPage { get; set; }

		[Column] public string DS_ImportURL { get; set; }

		[Column] public bool? DS_ManualCrud { get; set; }

		[Column] public string DS_Filters { get; set; }

		[Column] public bool? DS_DisableSorting { get; set; }

		[Column] public bool? DS_ShowHistory { get; set; }

		[Column] public bool? DS_IsMenuNavigation { get; set; }

		[Column] public string DS_TableConfigs { get; set; }

		[Column] public string DS_CustomJavaScript { get; set; }

		[Column] public string DS_Condition { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }

		[Column] public string DS_CustomQuery { get; set; }}

    
	[TableName("Entities")]


	[PrimaryKey("EntityID")]



	[ExplicitColumns]
    public partial class Entity : FrameworkRepository.Record<Entity>  
    {


		[Column] public int EntityID { get; set; }

		[Column] public string EntityName { get; set; }

		[Column] public int DataVersion { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }

		[Column] public string LinkUrl { get; set; }}

    
	[TableName("EntityDetails")]


	[PrimaryKey("EntityDetailsID")]



	[ExplicitColumns]
    public partial class EntityDetail : FrameworkRepository.Record<EntityDetail>  
    {


		[Column] public int EntityDetailsID { get; set; }

		[Column] public int EntityID { get; set; }

		[Column] public string ColumnName { get; set; }

		[Column] public string DisplayNameEn { get; set; }

		[Column] public string DisplayNameAr { get; set; }

		[Column] public short DbTypeID { get; set; }

		[Column] public bool IsRequired { get; set; }

		[Column] public bool? IsGroup { get; set; }

		[Column] public int? ParentSubGroupID { get; set; }

		[Column] public int? ParentEntityDetailsID { get; set; }

		[Column] public bool IsForeignkey { get; set; }

		[Column] public string RefrencedTableName { get; set; }

		[Column] public bool EnableAutoComplate { get; set; }

		[Column] public string AutoCompleteSourceQuery { get; set; }

		[Column] public bool? IsDigit { get; set; }

		[Column] public string ValidationExpression { get; set; }

		[Column] public bool AddEditVisible { get; set; }

		[Column] public bool GridVisible { get; set; }

		[Column] public bool SearchFilterVisible { get; set; }

		[Column] public short MaxLength { get; set; }

		[Column] public bool IsAutoID { get; set; }

		[Column] public bool IsPrimaryKey { get; set; }

		[Column] public int? DisplaySeqNo { get; set; }

		[Column] public bool? IsFileUpload { get; set; }

		[Column] public string AllowedFiles { get; set; }

		[Column] public bool ShowGroupTitle { get; set; }

		[Column] public string PlaceHolderText { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("MenuNavigations")]


	[PrimaryKey("MenuNavigationID")]



	[ExplicitColumns]
    public partial class MenuNavigation : FrameworkRepository.Record<MenuNavigation>  
    {


		[Column] public int MenuNavigationID { get; set; }

		[Column] public string MenuNavigationName { get; set; }

		[Column] public int? ParentMenuNavigationID { get; set; }

		[Column] public int? DisplaySeqNo { get; set; }

		[Column] public string LinkUrl { get; set; }

		[Column] public string IconClass { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public DateTime CreatedOn { get; set; }

		[Column] public int CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }

		[Column] public int? EntityID { get; set; }}

    
	[TableName("OrderDetails")]


	[PrimaryKey("OrderDetailID")]



	[ExplicitColumns]
    public partial class OrderDetail : FrameworkRepository.Record<OrderDetail>  
    {


		[Column] public int OrderDetailID { get; set; }

		[Column] public int OrderID { get; set; }

		[Column] public int ProductID { get; set; }

		[Column] public int Quantity { get; set; }

		[Column] public decimal Price { get; set; }

		[Column] public int CurrencyID { get; set; }

		[Column] public int? VendorID { get; set; }}

    
	[TableName("Orders")]


	[PrimaryKey("OrderID")]



	[ExplicitColumns]
    public partial class Order : FrameworkRepository.Record<Order>  
    {


		[Column] public int OrderID { get; set; }

		[Column] public int UserID { get; set; }

		[Column] public DateTime OrderDate { get; set; }

		[Column] public int StatusID { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("V_Status")]


	[PrimaryKey("Status", autoIncrement=false)]

	[ExplicitColumns]
    public partial class V_Status : FrameworkRepository.Record<V_Status>  
    {


		[Column] public int StatusID { get; set; }

		[Column] public string Status { get; set; }}

    
	[TableName("ProductCategories")]


	[PrimaryKey("ProductCategoryID")]



	[ExplicitColumns]
    public partial class ProductCategory : FrameworkRepository.Record<ProductCategory>  
    {


		[Column] public int ProductCategoryID { get; set; }

		[Column] public int? ProductID { get; set; }

		[Column] public int? CategoryID { get; set; }

		[Column] public bool IsDeleted { get; set; }}

    
	[TableName("V_Order")]


	[PrimaryKey("OrderID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class V_Order : FrameworkRepository.Record<V_Order>  
    {


		[Column] public int OrderID { get; set; }

		[Column] public DateTime? OrderDate { get; set; }

		[Column] public int UserID { get; set; }

		[Column] public string ShippingAddress { get; set; }

		[Column] public string Status { get; set; }}

    
	[TableName("ProductImages")]


	[PrimaryKey("ProductImageID")]



	[ExplicitColumns]
    public partial class ProductImage : FrameworkRepository.Record<ProductImage>  
    {


		[Column] public int ProductImageID { get; set; }

		[Column] public string ImageUrl { get; set; }

		[Column] public int? ProductID { get; set; }

		[Column] public bool IsDefault { get; set; }

		[Column] public bool IsDeleted { get; set; }

		[Column] public string WebImage { get; set; }}

    
	[TableName("Products")]


	[PrimaryKey("ProductID")]



	[ExplicitColumns]
    public partial class Product : FrameworkRepository.Record<Product>  
    {


		[Column] public int ProductID { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public string DescriptionAr { get; set; }

		[Column] public string DescriptionEn { get; set; }

		[Column] public decimal? Price { get; set; }

		[Column] public int Stock { get; set; }

		[Column] public int TotalQuantity { get; set; }

		[Column] public bool IsDeleted { get; set; }

		[Column] public decimal? OldPrice { get; set; }}

    
	[TableName("V_OrderDetails")]


	[PrimaryKey("OrderDetailsID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class V_OrderDetail : FrameworkRepository.Record<V_OrderDetail>  
    {


		[Column] public int OrderDetailsID { get; set; }

		[Column] public int OrderID { get; set; }

		[Column] public int ProductID { get; set; }

		[Column] public int quantity { get; set; }

		[Column] public int Price { get; set; }

		[Column] public int VendorID { get; set; }}

    
	[TableName("ResourceLocalizations")]


	[ExplicitColumns]
    public partial class ResourceLocalization : FrameworkRepository.Record<ResourceLocalization>  
    {


		[Column] public string ResourceKey { get; set; }

		[Column] public string ResourceValueAr { get; set; }

		[Column] public string ResourceValueEn { get; set; }}

    
	[TableName("Resources")]


	[PrimaryKey("ResourceID")]



	[ExplicitColumns]
    public partial class Resource : FrameworkRepository.Record<Resource>  
    {


		[Column] public int ResourceID { get; set; }

		[Column] public int LanguageID { get; set; }

		[Column] public string ResourceKey { get; set; }

		[Column] public string ResourceValue { get; set; }}

    
	[TableName("Rights")]


	[PrimaryKey("RightID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class Right : FrameworkRepository.Record<Right>  
    {


		[Column] public int RightID { get; set; }

		[Column] public string RightName { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("V_Ostatus")]


	[PrimaryKey("O_StatusID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class V_Ostatus : FrameworkRepository.Record<V_Ostatus>  
    {


		[Column] public int O_StatusID { get; set; }

		[Column] public int OrderID { get; set; }

		[Column] public int UserID { get; set; }

		[Column] public string Status { get; set; }}

    
	[TableName("RoleRights")]


	[PrimaryKey("RoleRightID")]



	[ExplicitColumns]
    public partial class RoleRight : FrameworkRepository.Record<RoleRight>  
    {


		[Column] public int RoleRightID { get; set; }

		[Column] public int RoleID { get; set; }

		[Column] public int RightID { get; set; }

		[Column] public int EntityID { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("Roles")]


	[PrimaryKey("RoleID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class Role : FrameworkRepository.Record<Role>  
    {


		[Column] public int RoleID { get; set; }

		[Column] public string RoleName { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("Statuses")]


	[PrimaryKey("StatusID", autoIncrement=false)]

	[ExplicitColumns]
    public partial class Status : FrameworkRepository.Record<Status>  
    {


		[Column] public int StatusID { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public bool IsActive { get; set; }}

    
	[TableName("Blogs")]


	[PrimaryKey("BlogID")]



	[ExplicitColumns]
    public partial class Blog : FrameworkRepository.Record<Blog>  
    {


		[Column] public int BlogID { get; set; }

		[Column] public string BlogName { get; set; }

		[Column] public string BlogDetails { get; set; }

		[Column] public string BlogImageUrl { get; set; }

		[Column] public bool? IsActive { get; set; }

		[Column] public bool IsDeleted { get; set; }}

    
	[TableName("UserRoles")]


	[PrimaryKey("UserRoleID")]



	[ExplicitColumns]
    public partial class UserRole : FrameworkRepository.Record<UserRole>  
    {


		[Column] public int UserRoleID { get; set; }

		[Column] public int UserID { get; set; }

		[Column] public int RoleID { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }}

    
	[TableName("PlantGuide")]


	[PrimaryKey("PlantGuideID")]



	[ExplicitColumns]
    public partial class PlantGuide : FrameworkRepository.Record<PlantGuide>  
    {


		[Column] public int PlantGuideID { get; set; }

		[Column] public string PlantGuideName { get; set; }

		[Column] public string PlantGuideDetails { get; set; }

		[Column] public string PlantGuideImageUrl { get; set; }

		[Column] public bool? IsActive { get; set; }

		[Column] public bool IsDeleted { get; set; }}

    
	[TableName("Users")]


	[PrimaryKey("UserID")]



	[ExplicitColumns]
    public partial class User : FrameworkRepository.Record<User>  
    {


		[Column] public int UserID { get; set; }

		[Column] public string FullName { get; set; }

		[Column] public string EmailAddress { get; set; }

		[Column] public string Password { get; set; }

		[Column] public string PhoneNo { get; set; }

		[Column] public int? CountryID { get; set; }

		[Column] public int? CityID { get; set; }

		[Column] public string ProfileUrl { get; set; }

		[Column] public string VerificationCode { get; set; }

		[Column] public bool IsVerified { get; set; }

		[Column] public int StatusID { get; set; }

		[Column] public bool? IsTermOfUseAccepted { get; set; }

		[Column] public bool? IsPrivacyPolicyAccepted { get; set; }

		[Column] public DateTime? CreatedOn { get; set; }

		[Column] public int? CreatedBy { get; set; }

		[Column] public DateTime? ModifiedOn { get; set; }

		[Column] public int? ModifiedBy { get; set; }

		[Column] public string BillingAddress { get; set; }

		[Column] public string ShippingAddress { get; set; }}

    
	[TableName("VariantCategories")]


	[PrimaryKey("VariantCategoryID")]



	[ExplicitColumns]
    public partial class VariantCategory : FrameworkRepository.Record<VariantCategory>  
    {


		[Column] public int VariantCategoryID { get; set; }

		[Column] public int CategoryID { get; set; }

		[Column] public int VariantID { get; set; }}

    
	[TableName("Variants")]


	[PrimaryKey("VariantID")]



	[ExplicitColumns]
    public partial class Variant : FrameworkRepository.Record<Variant>  
    {


		[Column] public int VariantID { get; set; }

		[Column] public string NameAr { get; set; }

		[Column] public string NameEn { get; set; }

		[Column] public bool IsActive { get; set; }

		[Column] public bool IsDeleted { get; set; }}

    
	[TableName("Vendors")]


	[PrimaryKey("VendorID")]



	[ExplicitColumns]
    public partial class Vendor : FrameworkRepository.Record<Vendor>  
    {


		[Column] public int VendorID { get; set; }

		[Column] public string Name { get; set; }

		[Column] public decimal Contact { get; set; }

		[Column] public string Email { get; set; }

		[Column] public string City { get; set; }

		[Column] public string Area { get; set; }

		[Column] public string Street { get; set; }

		[Column] public string HouseNo { get; set; }

		[Column] public string Notes { get; set; }

		[Column] public int? CityID { get; set; }}


}



